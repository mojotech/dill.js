// Generated by CoffeeScript 1.7.1
var __slice = [].slice;

module.exports = function() {
  var World;
  World = this;
  this.Factories = {};
  return this.Factory = (function() {
    function Factory() {}

    Factory.create = function(attributes) {
      if (attributes == null) {
        attributes = {};
      }
      return this._execute((function(_this) {
        return function() {
          return World.logger.silence(function() {
            return _this._defer(_this._getCreator(), _this._getDefaults());
          });
        };
      })(this));
    };

    Factory._getCreator = function() {
      return this.creator.call(World);
    };

    Factory._getDefaults = function() {
      if (!_.isFunction(this.defaults)) {
        return this.defaults;
      }
      return this.defaults();
    };

    Factory._defer = function() {
      var args, callback, deferred;
      callback = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      deferred = $.defer();
      callback.call.apply(callback, [World].concat(__slice.call(args), [function() {
        var error, rest;
        error = arguments[0], rest = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
        if (error) {
          return defered.reject(error);
        } else {
          return deferred.fulfill.apply(deferred, rest);
        }
      }]));
      return deferred.promise;
    };

    Factory._execute = function(job) {
      return $.controlFlow().execute(job);
    };

    return Factory;

  })();
};
